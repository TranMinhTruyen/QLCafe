<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQLThucUong.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qST/2Q==
</value>
  </data>
</root>